// Apply the ArtifactS3 plugin the project
// This plugin is enables a number of other plugins creating a template workflow (test->publish->deploy->update)
plugins {
    id 'com.cfnstacks.gradle.artifacts3' version '0.2.4'
}

// Project namespace and description
group = 'com.cfnstacks'
description = 'Application Example'

// The local-config.groovy file has been .gitignore'd and allows you to locally override params
// in a file instead of having to pass CLI params and without having to change this file
ext.params = [:]
if(project.file('local-config.groovy').exists()) { apply from: 'local-config.groovy' }
def setParam(name, defaultValue) {
    if (hasProperty(name)) return property(name)
    if (params.containsKey(name)) { return params.get(name) }
    return defaultValue
}

// A spot to override default build/deploy/publish settings with command line params
// Example: ./gradlew updateStack -Pprofile=my-aws-cli-profile -Pstack=test-stack
ext.params.with {
    failure = setParam('failure', 'ROLLBACK') // DO_NOTHING | ROLLBACK | DELETE
    group = setParam('group', 'com.cfnstacks')
    stackParamSet = setParam('stackParamSet', 'appAndVpc')
    profile = setParam('profile', '')
    region = setParam('region', 'us-east-2')
    repo = setParam('repo', 'cfn-stacks.com.s3.us-east-2.amazonaws.com')
    stack = setParam('stack', 'app-example')
    template = setParam('template', 'app-main.yaml')

    // Commonly used project params above. Project specific params below
    allowed = setParam('allowed', new URL('http://checkip.amazonaws.com').getText().trim() + '/32')
    instance = setParam('instance', false)
    subnet = setParam('subnet', '')
    vpc = setParam('vpc', '')
    zones = setParam('zones', 'us-east-2a,us-east-2b')
}

// Parameters passed into CloudFormation stack
// If there are more than one templates in the main/cloudformation directory you can have multiple named sets of params
ext.stackParameters = [
    appAndVpc: [ // Use -Pinstance=true or a local-config file setting to launch an ec2 instance in the VPC
        AllowedIPs: params.allowed,
        AvailabilityZones: params.zones,
        CreateInstance: params.instance
    ],
    appOnly: [  // Use -Ptemplate=app.yaml -stackParamSet=appOnly -Pallowed=YOUR_IP/32 -Psubnet=SUBNET_ID -Pvpc=VPC_ID params
        AllowedIPs: params.allowed,
        InstanceSubnetId: params.subnet,
        VpcId: params.vpc
    ]
]

// Config block for the ArtifactS3 plugin
artifacts3 {
    group = params.group
    profileName = params.profile
    repo = params.repo
}

// Config block for AWS settings
aws {
    profileName = params.profile
    region = params.region
}

// Config block for the Amazon CloudFormation Plugin
cloudFormation {
    templateFile = project.file("build/cloudformation/${params.template}")
    stackName = params.stack
    capabilityIam false
    onFailure params.failure
    conventionMapping.stackParams = { project.ext.stackParameters[project.ext.params.stackParamSet] }
}

// Config block for the Asciidoctor Plugin
asciidoctor {
    backends 'html5', 'pdf'
    attributes \
        'build-gradle': file('build.gradle'),
        'stylesheet': 'stylesheets/style.css',
        'source-highlighter': 'coderay',
        'imagesdir': 'images',
        'toc': 'left',
        'icons': 'font',
        'setanchors': '',
        'idprefix': '',
        'idseparator': '-',
        'docinfo1': '',
        'projectVersion': project.version
}